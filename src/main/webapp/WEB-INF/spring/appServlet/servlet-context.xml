<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven>
	<!-- Add custom Resolvers -->
	   <argument-resolvers>
            <beans:bean class="edu.uoa.estia.mobile.device.DeviceHandlerMethodArgumentResolver" lazy-init="false" />
       </argument-resolvers>
	</annotation-driven>
	
	<!-- Add custom interceptors based on URI -->
    <interceptors>
        <interceptor>
            <mapping path="/**" />
            <beans:bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor"></beans:bean>
        </interceptor>
    </interceptors>

	<context:component-scan base-package="edu.uoa.estia" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- <beans:property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/> -->
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>
	</beans:bean>

	<!-- Tiles configuration -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/layouts/tiles.xml</beans:value>
				<beans:value>/WEB-INF/views/**/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
   <!-- Tiles View Resolver -->
	<beans:bean id="viewResolverTiles"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass">
			<beans:value>org.springframework.web.servlet.view.tiles2.TilesView</beans:value>
		</beans:property>
		<beans:property name="order" value="1" />
	</beans:bean>

</beans:beans>
